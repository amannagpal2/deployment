on:
  workflow_dispatch:
  push:
    branches:
    - trial1
  pull_request:
    branches:
    - main
    

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    container:
      image: cfwweusbdevregistry.azurecr.io/ubuntu-devops:1.0.4
      credentials:
        username: ${{ secrets.MRT_CLIENT_ID }}
        password: ${{ secrets.MRT_CLIENT_SECRET }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install azure CLi
      run: curl -sL https://aka.ms/InstallAzureCLIDeb | bash

    - name: Verify Azure CLI Installation
      run: az --version

    - name: Login to Azure
      run: |
        az login --service-principal \
          -u ${{ secrets.MRT_CLIENT_ID }} \
          -p ${{ secrets.MRT_CLIENT_SECRET }} \
          --tenant 0ae51e19-07c8-4e4b-bb6d-648ee58410f4
    - name: Set Azure Subscription
      run: |
        az account set --subscription 6fac4eec-5096-4bc1-9c2a-2aa6f5a7f6d7
    - name: Check for public access restricted or not
      run: |
        az acr show --name cfwweusbdevregistry --query "networkRuleSet" --output json
      continue-on-error: true

    - name: Access via Service Principal
      run: |
        OUTPUT=$(docker login cfwweusbdevregistry.azurecr.io -u ${{ secrets.MRT_CLIENT_ID }} -p ${{ secrets.MRT_CLIENT_SECRET }})
        echo "$OUTPUT"
        if echo "$OUTPUT" | grep -q "Login Succeeded"; then
          echo "Docker login successful"
        else
          echo "Docker login failed" >&2
          exit 1
        fi
      continue-on-error: true

    - name: Private Endpoint Check
      run: |
        apt install -y dnsutils
        nslookup cfwweusbdevregistry.azurecr.io
      continue-on-error: true
